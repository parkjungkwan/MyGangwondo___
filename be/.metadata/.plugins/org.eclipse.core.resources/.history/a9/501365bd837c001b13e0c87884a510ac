package com.example.demo.prd.service;

import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Service;

import com.example.demo.cmm.service.AbstractService;
import com.example.demo.prd.domain.Product;
import com.example.demo.prd.repository.ProductRepository;
import com.example.demo.prd.repository.ProductRepositoryImpl;

import lombok.RequiredArgsConstructor;



@Service 
@RequiredArgsConstructor
public class ProductServiceImpl extends AbstractService<Product>
								implements ProductService{
	private final ProductRepository repo;
	
	@Override public int save(Product t) {return (repo.save(t)!=null) ? 1:0;}
	@Override public int count() {return (int) repo.count();}
	@Override public Product getOne(int id) {return repo.getOne(id);}
	@Override public Optional<Product> findById(int id) {return repo.findById(id);}
	@Override public boolean existsById(int id) {return repo.existsById(id);}
	@Override public List<Product> findAll() {return repo.findAll();}
	@Override public int delete(Product t) {
		repo.delete(t); 
		return (getOne(t.getPrdId())==null) ? 1 : 0;
	}
	
}
